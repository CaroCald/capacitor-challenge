{"version":3,"file":"src_app_heroes_heroes_module_ts.js","mappings":"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","sources":["./src/app/heroes/components/card/card.component.html","./src/app/heroes/components/card/card.component.ts","./src/app/heroes/components/confirm-dialog/confirm-dialog.component.ts","./src/app/heroes/components/confirm-dialog/confirm-dialog.component.html","./src/app/heroes/heroes-routing.module.ts","./src/app/heroes/heroes.module.ts","./src/app/heroes/interfaces/hero.interface.ts","./src/app/heroes/pages/hero-page/hero-page.component.ts","./src/app/heroes/pages/hero-page/hero-page.component.html","./src/app/heroes/pages/layout-page/layout-page.component.html","./src/app/heroes/pages/layout-page/layout-page.component.ts","./src/app/heroes/pages/list-page/list-page.component.html","./src/app/heroes/pages/list-page/list-page.component.ts","./src/app/heroes/pages/new-page/new-page.component.ts","./src/app/heroes/pages/new-page/new-page.component.html","./src/app/heroes/pages/search-page/search-page.component.ts","./src/app/heroes/pages/search-page/search-page.component.html","./src/app/heroes/pipes/hero-image.pipe.ts","./src/app/heroes/services/heroes.service.ts","./node_modules/@capacitor/camera/dist/esm/definitions.js","./node_modules/@capacitor/camera/dist/esm/index.js","./node_modules/@capacitor/share/dist/esm/index.js"],"sourcesContent":["\n<mat-card>\n  <mat-card-header>\n    <mat-card-title>{{ hero.superhero }}</mat-card-title>\n    <mat-card-subtitle>{{ hero.alter_ego }}</mat-card-subtitle>\n  </mat-card-header>\n\n  <!-- TODO: imagen -->\n  <img mat-card-image [src]=\"hero | heroImage\" [alt]=\"hero.superhero\">\n\n  <mat-card-content class=\"mt-2\">\n    <h4>{{ hero.publisher }}</h4>\n    <p>\n      <strong>Primera aparición</strong> {{ hero.first_appearance }}\n      <br>\n      <mat-chip-listbox>\n        <mat-chip *ngFor=\"let name of hero.characters.split(',') | slice:0:3\">\n          {{ name }}\n        </mat-chip>\n      </mat-chip-listbox>\n    </p>\n  </mat-card-content>\n\n  <mat-divider></mat-divider>\n\n  <mat-card-actions>\n\n    <button mat-button\n      mat-raised\n      color=\"primary\"\n      [routerLink]=\"['/heroes/edit', hero.id ]\">\n      <mat-icon>edit</mat-icon>\n      Editar\n    </button>\n\n    <span class=\"spacer\"></span>\n\n    <button mat-button\n      mat-raised\n      [routerLink]=\"['/heroes', hero.id ]\">\n      <mat-icon>more_horiz</mat-icon>\n      Más\n    </button>\n\n  </mat-card-actions>\n\n</mat-card>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Hero } from '../../interfaces/hero.interface';\n\n@Component({\n  selector: 'heroes-hero-card',\n  templateUrl: './card.component.html',\n  styles: [\n  ]\n})\nexport class CardComponent implements OnInit {\n\n  @Input()\n  public hero!: Hero;\n\n\n  ngOnInit(): void {\n    if ( !this.hero ) throw Error('Hero property is required');\n  }\n\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Hero } from '../../interfaces/hero.interface';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styles: [\n  ]\n})\nexport class ConfirmDialogComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Hero,\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close(false);\n  }\n\n  onConfirm():void {\n    this.dialogRef.close(true)\n  }\n}\n","<h1 mat-dialog-title>¿Está seguro?</h1>\n<div mat-dialog-content>\n  <p>Este proceso no es reversible, está a punto de elimiar a {{ data.superhero }}</p>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">No Thanks</button>\n  <span class=\"spacer\"></span>\n  <button mat-button color=\"primary\" (click)=\"onConfirm()\" cdkFocusInitial>Ok</button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LayoutPageComponent } from './pages/layout-page/layout-page.component';\nimport { NewPageComponent } from './pages/new-page/new-page.component';\nimport { SearchPageComponent } from './pages/search-page/search-page.component';\nimport { ListPageComponent } from './pages/list-page/list-page.component';\nimport { HeroPageComponent } from './pages/hero-page/hero-page.component';\n\n\n// localhost:4200/heroes\nconst routes: Routes = [\n  {\n    path: '',\n    component: LayoutPageComponent,\n    children: [\n      { path: 'new-hero', component: NewPageComponent },\n      { path: 'search', component: SearchPageComponent },\n      { path: 'edit/:id', component: NewPageComponent },\n      { path: 'list', component: ListPageComponent },\n      { path: ':id', component: HeroPageComponent },\n      { path: '**', redirectTo: 'list' },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HeroesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { HeroesRoutingModule } from './heroes-routing.module';\nimport { MaterialModule } from '../material/material.module';\n\nimport { HeroPageComponent } from './pages/hero-page/hero-page.component';\nimport { LayoutPageComponent } from './pages/layout-page/layout-page.component';\nimport { ListPageComponent } from './pages/list-page/list-page.component';\nimport { NewPageComponent } from './pages/new-page/new-page.component';\nimport { SearchPageComponent } from './pages/search-page/search-page.component';\nimport { CardComponent } from './components/card/card.component';\nimport { HeroImagePipe } from './pipes/hero-image.pipe';\nimport { ConfirmDialogComponent } from './components/confirm-dialog/confirm-dialog.component';\n\n\n@NgModule({\n  declarations: [\n    HeroPageComponent,\n    LayoutPageComponent,\n    ListPageComponent,\n    NewPageComponent,\n    SearchPageComponent,\n    CardComponent,\n\n    // Pipes\n    HeroImagePipe,\n     ConfirmDialogComponent,\n     \n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    HeroesRoutingModule,\n    MaterialModule,\n  ]\n})\nexport class HeroesModule { }\n","// Generated by https://quicktype.io\n\nimport { SafeResourceUrl } from \"@angular/platform-browser\";\n\nexport interface Hero {\n  id:               string;\n  superhero:        string;\n  publisher:        Publisher;\n  alter_ego:        string;\n  first_appearance: string;\n  characters:       string;\n  alt_img?:         string;\n  upload_img?:      SafeResourceUrl;\n}\n\nexport enum Publisher {\n  DCComics = \"DC Comics\",\n  MarvelComics = \"Marvel Comics\",\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { switchMap } from 'rxjs';\n\nimport { HeroesService } from '../../services/heroes.service';\nimport { Hero } from '../../interfaces/hero.interface';\nimport { Share } from '@capacitor/share';\nimport { Capacitor } from '@capacitor/core';\n\n@Component({\n  selector: 'app-hero-page',\n  templateUrl: './hero-page.component.html',\n  styles: [\n  ]\n})\nexport class HeroPageComponent implements OnInit {\n\n  public hero?: Hero;\n  public isMobile : boolean = false\n\n  constructor(\n    private heroesService: HeroesService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n  ) {}\n\n  ngOnInit(): void {\n\n    this.isMobile = Capacitor.isNativePlatform();\n\n    this.activatedRoute.params\n      .pipe(\n        switchMap( ({ id }) => this.heroesService.getHeroById( id )),\n      )\n      .subscribe( hero => {\n\n        if ( !hero ) return this.router.navigate([ '/heroes/list' ]);\n\n        this.hero = hero;\n        return;\n      })\n  }\n\n  goBack():void {\n    this.router.navigateByUrl('heroes/list')\n  }\n\n\n  //3. Share information from hero\n  async shareImage(){\n    await Share.share({\n      title: 'Informacion',\n      text: `Informacion del heroe: primerea aparicion: ${this.hero?.first_appearance}, nombre: ${this.hero?.superhero}`,\n    });\n  }\n\n}\n","\n<ng-template #divLoading>\n  <mat-grid-list cols=\"1\">\n    <mat-grid-tile>\n      <mat-spinner></mat-spinner>\n    </mat-grid-tile>\n  </mat-grid-list>\n</ng-template>\n\n\n<div *ngIf=\"hero; else divLoading\" class=\"grid p-2\">\n\n  <mat-card class=\"col-12 sm:col-6\">\n\n    <mat-card-header>\n      <mat-card-title>{{ hero.alter_ego }}</mat-card-title>\n      <mat-card-subtitle>{{ hero.superhero }}</mat-card-subtitle>\n    </mat-card-header>\n\n\n    <img [src]=\"hero | heroImage\" [alt]=\"hero.superhero\" mat-card-image  />\n\n  </mat-card>\n\n  <mat-card class=\"col-12 sm:col-6\">\n\n    <mat-card-header>\n      <mat-card-title>Información</mat-card-title>\n      <mat-card-subtitle>{{ hero.superhero }}</mat-card-subtitle>\n    </mat-card-header>\n\n    <mat-card-content>\n      <mat-list>\n        <mat-list-item>{{ hero.first_appearance }}</mat-list-item>\n        <mat-list-item>{{ hero.characters }}</mat-list-item>\n        <mat-list-item>{{ hero.publisher }}</mat-list-item>\n        <mat-list-item>{{ hero.alter_ego }}</mat-list-item>\n      </mat-list>\n\n      <button\n        mat-button\n        color=\"warn\"\n        (click)=\"goBack()\"\n      >\n        Regresar\n      </button>\n\n      <span class=\"spacer\"></span>\n\n      <button mat-button *ngIf=\"isMobile\"\n      mat-raised (click)=\"shareImage()\" >\n      <mat-icon>share</mat-icon>\n      Compartir \n    </button>\n\n    </mat-card-content>\n\n\n  </mat-card>\n\n\n</div>\n","<mat-sidenav-container fullscreen>\n\n  <mat-sidenav #sidenav mode=\"push\" [ngStyle]=\"{ width: '250px' }\">\n    <mat-toolbar>\n      <span>Menú</span>\n      <span class=\"spacer\"></span>\n      <button mat-icon-button (click)=\"sidenav.toggle()\">\n        <mat-icon>menu</mat-icon>\n      </button>\n\n    </mat-toolbar>\n\n    <mat-nav-list>\n      <mat-list-item\n        *ngFor=\"let item of sidebarItems\"\n        [routerLink]=\"item.url\"\n        (click)=\"sidenav.toggle()\"\n      >\n        <mat-icon matListItemIcon>{{ item.icon }}</mat-icon>\n        {{ item.label }}\n      </mat-list-item>\n    </mat-nav-list>\n\n  </mat-sidenav>\n\n\n  <mat-toolbar color=\"primary\">\n    <button mat-icon-button (click)=\"sidenav.toggle()\">\n      <mat-icon>menu</mat-icon>\n    </button>\n\n    <span class=\"spacer\"></span>\n\n    <span>{{ user?.email }}</span>\n\n    <button mat-button (click)=\"onLogout()\">\n      Logout\n    </button>\n\n  </mat-toolbar>\n\n\n  <div class=\"container p-2\">\n\n    <router-outlet></router-outlet>\n\n  </div>\n\n</mat-sidenav-container>\n\n\n\n\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../../../auth/services/auth.service';\nimport { User } from '../../../auth/interfaces/user.interface';\n\n@Component({\n  selector: 'app-layout-page',\n  templateUrl: './layout-page.component.html',\n  styles: [\n  ]\n})\nexport class LayoutPageComponent {\n\n  public sidebarItems = [\n    { label: 'Listado', icon: 'label', url: './list' },\n    { label: 'Añadir', icon: 'add', url: './new-hero' },\n    { label: 'Buscar', icon: 'search', url: './search' },\n  ];\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  get user():User | undefined {\n    return this.authService.currentUser;\n  }\n\n  onLogout() {\n    this.authService.logout();\n    this.router.navigate(['/auth/login'])\n  }\n\n}\n","<h1>Listado de Héroes</h1>\n<mat-divider></mat-divider>\n\n<div class=\"grid bm-8 pt-2\">\n\n  <div *ngFor=\"let hero of heroes\"\n    class=\"col-12 sm:col-4 md:col-3 xl:col-2\">\n    <heroes-hero-card [hero]=\"hero\"></heroes-hero-card>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Hero } from '../../interfaces/hero.interface';\nimport { HeroesService } from '../../services/heroes.service';\n\n@Component({\n  selector: 'app-list-page',\n  templateUrl: './list-page.component.html',\n  styles: [\n  ]\n})\nexport class ListPageComponent implements OnInit {\n\n  public heroes: Hero[] = [];\n\n  constructor( private heroesService: HeroesService ) {}\n\n  ngOnInit(): void {\n    this.heroesService.getHeroes()\n      .subscribe( heroes => this.heroes = heroes );\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { filter, switchMap, tap } from 'rxjs';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Publisher, Hero } from '../../interfaces/hero.interface';\nimport { HeroesService } from '../../services/heroes.service';\n\nimport { ConfirmDialogComponent } from '../../components/confirm-dialog/confirm-dialog.component';\n\nimport { Toast } from '@capacitor/toast';\nimport { Capacitor } from '@capacitor/core';\nimport { Camera, CameraResultType, CameraSource } from '@capacitor/camera';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n\n\n@Component({\n  selector: 'app-new-page',\n  templateUrl: './new-page.component.html',\n  styles: [],\n})\nexport class NewPageComponent implements OnInit {\n\n  public heroForm = new FormGroup({\n    id: new FormControl<string>(''),\n    superhero: new FormControl<string>('', { nonNullable: true }),\n    publisher: new FormControl<Publisher>(Publisher.DCComics),\n    alter_ego: new FormControl(''),\n    first_appearance: new FormControl(''),\n    characters: new FormControl(''),\n    alt_img: new FormControl(''),\n  });\n\n  public publishers = [\n    { id: 'DC Comics', desc: 'DC - Comics' },\n    { id: 'Marvel Comics', desc: 'Marvel - Comics' },\n  ];\n\n  public isMobile : boolean = false\n\n  constructor(\n    private heroesService: HeroesService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private snackbar: MatSnackBar,\n    private dialog: MatDialog,\n    private sanitizer: DomSanitizer\n  ) {}\n\n  get currentHero(): Hero {\n    const hero = this.heroForm.value as Hero;\n    return hero;\n  }\n\n  ngOnInit(): void {\n\n    this.isMobile = Capacitor.isNativePlatform();\n\n    if (!this.router.url.includes('edit')) return;\n\n    this.activatedRoute.params\n      .pipe(switchMap(({ id }) => this.heroesService.getHeroById(id)))\n      .subscribe((hero) => {\n        if (!hero) {\n          return this.router.navigateByUrl('/');\n        }\n\n        this.heroForm.reset(hero);\n        return;\n      });\n  }\n\n  onSubmit(): void {\n    if (this.heroForm.invalid) return;\n\n    if (this.currentHero.id) {\n      this.heroesService.updateHero(this.currentHero).subscribe((hero) => {\n        this.showAlert(`${hero.superhero} updated!`);\n      });\n\n      return;\n    }\n\n    this.heroesService.addHero(this.currentHero).subscribe((hero) => {\n      // TODO: mostrar snackbar, y navegar a /heroes/edit/ hero.id\n      this.router.navigate(['/heroes/edit', hero.id]);\n      this.showAlert(`${hero.superhero} created!`);\n    });\n  }\n\n  onDeleteHero() {\n    if (!this.currentHero.id) throw Error('Hero id is required');\n\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data: this.heroForm.value,\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(\n        filter((result: boolean) => result),\n        switchMap(() => this.heroesService.deleteHeroById(this.currentHero.id)),\n        filter((wasDeleted: boolean) => wasDeleted)\n      )\n      .subscribe(() => {\n        this.router.navigate(['/heroes']);\n      });\n\n    // dialogRef.afterClosed().subscribe(result => {\n    //   if ( !result ) return;\n\n    //   this.heroesService.deleteHeroById( this.currentHero.id )\n    //   .subscribe( wasDeleted => {\n    //     if ( wasDeleted )\n    //       this.router.navigate(['/heroes']);\n    //   })\n    // });\n  }\n\n  showSnackbar(message: string): void {\n    this.snackbar.open(message, 'done', {\n      duration: 2500,\n    });\n  }\n\n  async showToast(message: string){\n    await Toast.show({\n    text: message,\n    duration: 'long'\n  });\n  }\n\n  // 1.Added Toast, validate type of platfotm to show snackbar in web\n  showAlert(message: string): void {\n    if (Capacitor.isNativePlatform()) {\n      this.showToast(message)\n    } else {\n      this.showSnackbar(message);\n    }\n  }\n\n  //4. Upload image on mobile\n  async validateUploadImage() {\n    if (Capacitor.isNativePlatform()) {\n      const permission = await Camera.requestPermissions();\n  \n      if(permission){\n        if( permission.camera == 'granted' && permission.photos == 'granted'){\n          await this.uploadImage()\n          }else{\n            this.showToast(\"User Deny Camera Access Permission\")\n          }\n        } else {\n          this.showToast(\"User Deny Camera Access Permission\")\n        }\n      }\n    }\n\n    async uploadImage() {\n      const image = await Camera.getPhoto({\n        quality: 90,\n        allowEditing: false,\n        resultType: CameraResultType.Base64,\n        source: CameraSource.Photos \n    });\n  \n        if (image) {\n          this.currentHero.upload_img = this.sanitizer.bypassSecurityTrustResourceUrl(`data:image/png;base64, ${image.base64String}`);\n        }\n        else {\n          this.showToast(\"Error uploading image\")\n        }\n      }\n    \n}\n","<h1>\n  {{ currentHero.id ? 'Editar' : 'Agregar' }}\n  héroe\n  <small *ngIf=\"currentHero.id\">{{ currentHero.superhero }}</small>\n</h1>\n\n<mat-divider class=\"mb-2\"></mat-divider>\n\n<div class=\"grid\">\n\n  <div class=\"col-12 sm:col-6\">\n    <mat-card>\n      <mat-card-content>\n\n        <form class=\"grid\" [formGroup]=\"heroForm\">\n\n          <mat-form-field class=\"col-12 sm:col-6\">\n            <mat-label>Super héroe</mat-label>\n            <input\n              matInput\n              type=\"text\"\n              required\n              formControlName=\"superhero\"\n            />\n          </mat-form-field>\n\n          <mat-form-field class=\"col-12 sm:col-6\">\n            <mat-label>Alter ego</mat-label>\n            <input\n              matInput\n              type=\"text\"\n              required\n              formControlName=\"alter_ego\"\n            />\n          </mat-form-field>\n\n\n          <mat-form-field class=\"col-12\">\n            <mat-label>Primera aparición</mat-label>\n            <input\n              matInput\n              type=\"text\"\n              required\n              formControlName=\"first_appearance\"\n            />\n          </mat-form-field>\n\n          <mat-form-field class=\"col-12\">\n            <mat-label>Personajes</mat-label>\n            <input\n              matInput\n              type=\"text\"\n              required\n              formControlName=\"characters\"\n            />\n          </mat-form-field>\n\n          <mat-form-field class=\"col-12\">\n            <mat-label>Creador</mat-label>\n            <mat-select\n              formControlName=\"publisher\"\n              required\n            >\n              <mat-option *ngFor=\"let publisher of publishers\"\n                [value]=\"publisher.id\">\n                {{ publisher.desc }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n\n          <mat-form-field class=\"col-12\">\n            <mat-label>Alternative Image</mat-label>\n            <input\n              matInput\n              type=\"text\"\n              formControlName=\"alt_img\"\n            />\n          </mat-form-field>\n\n          <button  class=\"col-12\"\n          *ngIf=\"isMobile\"\n          (click)=\"validateUploadImage()\"\n          mat-flat-button\n          formControlName=\"upload_img\"\n          color=\"primary\">\n          Subir imagen\n        </button>\n        </form>\n\n        <div class=\"flex justify-content-between mt-3\">\n          <button\n            *ngIf=\"currentHero.id\"\n            (click)=\"onDeleteHero()\"\n            mat-flat-button\n            color=\"warn\"\n          >\n            Borrar\n          </button>\n          <span></span>\n\n          <button\n            mat-flat-button\n            color=\"primary\"\n            (click)=\"onSubmit()\"\n          >\n            <mat-icon>save</mat-icon>\n            Guardar\n          </button>\n        </div>\n\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n  <div class=\"col-12 sm:col-6\">\n\n    <mat-card *ngIf=\"!currentHero.upload_img; else uploadImageShow\">\n      <img [src]=\"currentHero | heroImage\" alt=\"imagen del héroe\" mat-card-image>\n    </mat-card>\n\n    <ng-template #uploadImageShow>\n      \n    </ng-template>\n    <mat-card *ngIf=\"currentHero.upload_img\">\n      <img [src]=\"currentHero.upload_img\" alt=\"imagen del héroe\" mat-card-image>\n    </mat-card>\n    \n  </div>\n</div>\n\n\n","import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\n\nimport { Hero } from '../../interfaces/hero.interface';\nimport { HeroesService } from '../../services/heroes.service';\n\n@Component({\n  selector: 'app-search-page',\n  templateUrl: './search-page.component.html',\n  styles: [\n  ]\n})\nexport class SearchPageComponent {\n\n  public searchInput = new FormControl('');\n  public heroes: Hero[] = [];\n  public selectedHero?: Hero;\n\n  constructor( private heroesService: HeroesService ){}\n\n  searchHero() {\n    const value: string = this.searchInput.value || '';\n\n    this.heroesService.getSuggestions( value )\n      .subscribe( heroes => this.heroes = heroes );\n  }\n\n\n  onSelectedOption( event: MatAutocompleteSelectedEvent ): void {\n    if ( !event.option.value ) {\n      this.selectedHero = undefined;\n      return;\n    }\n\n    const hero: Hero = event.option.value;\n    this.searchInput.setValue( hero.superhero );\n\n    this.selectedHero = hero;\n\n  }\n\n\n}\n","<div class=\"flex flex-column p-2\">\n\n  <h3>Buscador</h3>\n\n  <mat-form-field>\n    <mat-label>Buscador de héroes</mat-label>\n    <input\n      type=\"text\"\n      matInput\n      [formControl]=\"searchInput\"\n      (input)=\"searchHero()\"\n      [matAutocomplete]=\"auto\"\n    />\n\n    <mat-autocomplete autoActiveFirstOption\n      #auto=\"matAutocomplete\"\n      (optionSelected)=\"onSelectedOption( $event )\"\n      >\n      <mat-option *ngFor=\"let hero of heroes\" [value]=\"hero\">\n        {{ hero.superhero }}\n      </mat-option>\n\n      <mat-option\n        *ngIf=\"heroes.length === 0 && searchInput.value && searchInput.value.length > 0\"\n        value=\"\">\n        No se encontró nada con el término {{ searchInput.value }}\n      </mat-option>\n    </mat-autocomplete>\n\n  </mat-form-field>\n\n\n  {{ selectedHero | json }}\n\n\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Hero } from '../interfaces/hero.interface';\n\n@Pipe({\n  name: 'heroImage'\n})\nexport class HeroImagePipe implements PipeTransform {\n\n  transform( hero: Hero ): string {\n\n    if ( !hero.id && !hero.alt_img ) {\n      return 'assets/no-image.png';\n    }\n\n    if ( hero.alt_img ) return hero.alt_img; // https:///google.com/flash.png\n\n    return `assets/heroes/${ hero.id }.jpg`;\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map, Observable, of } from 'rxjs';\n\nimport { Hero } from '../interfaces/hero.interface';\nimport { environments } from '../../../environments/environments';\n\n@Injectable({ providedIn: 'root' })\nexport class HeroesService {\n\n  private baseUrl: string = environments.baseUrl;\n\n\n  constructor(private http: HttpClient) { }\n\n\n  getHeroes():Observable<Hero[]> {\n    return this.http.get<Hero[]>(`${ this.baseUrl }/heroes`);\n  }\n\n  getHeroById( id: string ): Observable<Hero|undefined> {\n    return this.http.get<Hero>(`${ this.baseUrl }/heroes/${ id }`)\n      .pipe(\n        catchError( error => of(undefined) )\n      );\n  }\n\n  getSuggestions( query: string ): Observable<Hero[]> {\n    return this.http.get<Hero[]>(`${ this.baseUrl }/heroes?q=${ query }&_limit=6`);\n  }\n\n\n  addHero( hero: Hero ): Observable<Hero> {\n    return this.http.post<Hero>(`${ this.baseUrl }/heroes`, hero );\n  }\n\n  updateHero( hero: Hero ): Observable<Hero> {\n    if ( !hero.id ) throw Error('Hero id is required');\n\n    return this.http.patch<Hero>(`${ this.baseUrl }/heroes/${ hero.id }`, hero );\n  }\n\n  deleteHeroById( id: string ): Observable<boolean> {\n\n    return this.http.delete(`${ this.baseUrl }/heroes/${ id }`)\n      .pipe(\n        map( resp => true ),\n        catchError( err => of(false) ),\n      );\n  }\n\n\n}\n","export var CameraSource;\n(function (CameraSource) {\n    /**\n     * Prompts the user to select either the photo album or take a photo.\n     */\n    CameraSource[\"Prompt\"] = \"PROMPT\";\n    /**\n     * Take a new photo using the camera.\n     */\n    CameraSource[\"Camera\"] = \"CAMERA\";\n    /**\n     * Pick an existing photo from the gallery or photo album.\n     */\n    CameraSource[\"Photos\"] = \"PHOTOS\";\n})(CameraSource || (CameraSource = {}));\nexport var CameraDirection;\n(function (CameraDirection) {\n    CameraDirection[\"Rear\"] = \"REAR\";\n    CameraDirection[\"Front\"] = \"FRONT\";\n})(CameraDirection || (CameraDirection = {}));\nexport var CameraResultType;\n(function (CameraResultType) {\n    CameraResultType[\"Uri\"] = \"uri\";\n    CameraResultType[\"Base64\"] = \"base64\";\n    CameraResultType[\"DataUrl\"] = \"dataUrl\";\n})(CameraResultType || (CameraResultType = {}));\n","import { registerPlugin } from '@capacitor/core';\nconst Camera = registerPlugin('Camera', {\n    web: () => import('./web').then(m => new m.CameraWeb()),\n});\nexport * from './definitions';\nexport { Camera };\n","import { registerPlugin } from '@capacitor/core';\nconst Share = registerPlugin('Share', {\n    web: () => import('./web').then(m => new m.ShareWeb()),\n});\nexport * from './definitions';\nexport { Share };\n"],"names":["i0","CardComponent","ngOnInit","hero","Error","selectors","inputs","decls","vars","consts","template","MAT_DIALOG_DATA","ConfirmDialogComponent","constructor","dialogRef","data","onNoClick","close","onConfirm","ctx","RouterModule","LayoutPageComponent","NewPageComponent","SearchPageComponent","ListPageComponent","HeroPageComponent","routes","path","component","children","redirectTo","HeroesRoutingModule","forChild","imports","exports","CommonModule","ReactiveFormsModule","MaterialModule","HeroImagePipe","HeroesModule","declarations","Publisher","switchMap","Share","Capacitor","heroesService","activatedRoute","router","isMobile","isNativePlatform","params","pipe","id","getHeroById","subscribe","navigate","goBack","navigateByUrl","shareImage","share","title","text","first_appearance","superhero","authService","label","icon","url","user","currentUser","onLogout","logout","getHeroes","heroes","FormControl","FormGroup","filter","Toast","Camera","CameraResultType","CameraSource","snackbar","dialog","sanitizer","nonNullable","publisher","DCComics","alter_ego","characters","alt_img","desc","currentHero","heroForm","value","includes","reset","onSubmit","invalid","updateHero","showAlert","addHero","onDeleteHero","open","afterClosed","result","deleteHeroById","wasDeleted","showSnackbar","message","duration","showToast","show","validateUploadImage","permission","requestPermissions","camera","photos","uploadImage","image","getPhoto","quality","allowEditing","resultType","Base64","source","Photos","upload_img","bypassSecurityTrustResourceUrl","base64String","searchHero","searchInput","getSuggestions","onSelectedOption","event","option","selectedHero","undefined","setValue","transform","pure","catchError","map","of","environments","HeroesService","http","baseUrl","get","error","query","post","patch","delete","resp","err","factory","providedIn","CameraDirection","registerPlugin","web","then","m","CameraWeb","ShareWeb"],"sourceRoot":"webpack:///","x_google_ignoreList":[19,20,21]}